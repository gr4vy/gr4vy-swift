name: iOS Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_15.0.app/Contents/Developer
      
    - name: Show Xcode version
      run: xcodebuild -version
      
    # Alternative: Keep caching with better invalidation
    # Uncomment the following section if you want to keep caching
    # - name: Cache derived data (with aggressive invalidation)
    #   uses: actions/cache@v3
    #   with:
    #     path: ~/Library/Developer/Xcode/DerivedData
    #     key: ${{ runner.os }}-derived-data-${{ github.sha }}-${{ hashFiles('**/*.swift', '**/*.h', '**/*.m', '**/*.mm', '**/*.c', '**/*.cpp', '**/*.xcodeproj/**', '**/*.xcworkspace/**') }}
    #     restore-keys: |
    #       ${{ runner.os }}-derived-data-${{ github.sha }}-
    #       ${{ runner.os }}-derived-data-
      
    - name: Clean derived data and build artifacts
      run: |
        # Remove all derived data
        rm -rf ~/Library/Developer/Xcode/DerivedData
        rm -rf ~/Library/Caches/com.apple.dt.Xcode
        
        # Clean Xcode build folder for the main scheme only
        xcodebuild clean -scheme gr4vy-swift -configuration Debug
        
        # Clean any remaining build artifacts
        find . -name "*.build" -type d -exec rm -rf {} + 2>/dev/null || true
        find . -name "*.xcuserdata" -type d -exec rm -rf {} + 2>/dev/null || true
        
        # Clean test-specific artifacts
        find . -name "TestResults.xcresult" -type d -exec rm -rf {} + 2>/dev/null || true
        find . -name "*.xcresult" -type d -exec rm -rf {} + 2>/dev/null || true
    
    - name: Build SDK
      run: |
        xcodebuild build \
          -scheme gr4vy-swift \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
          -configuration Debug \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO
    
    - name: Run tests
      run: |
        xcodebuild test \
          -scheme gr4vy-swiftTests \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
          -configuration Debug \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO
          
    - name: Run SwiftLint
      run: |
        if which swiftlint >/dev/null; then
          swiftlint
        else
          echo "SwiftLint not installed, skipping..."
        fi 